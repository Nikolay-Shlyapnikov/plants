/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nconst formBtn = document.querySelector('.form__button');\r\nconst cross = document.querySelector('.window__cross');\r\n\r\nconst sendBtn = document.querySelector('.form-button.send');\r\nconst backBtn = document.querySelector('.form-button.back');\r\n\r\nconst overlay = document.querySelector('.overlay');\r\nconst errorSpan = document.querySelector('span.error');\r\n\r\nconst nameInput = document.querySelector('.form__input.name');\r\nconst numberInput = document.querySelector('.form__input.number');\r\n\r\nconst window = document.querySelector('.window');\r\nconst spinner = document.querySelector('.spinner__wrapper');\r\n\r\nlet nameValid = false; //изначально форма не валидна\r\nlet numberValid = false;\r\ndocument.addEventListener('click', (e) => {\r\n    if (e.target == formBtn) { //дополнительные проверки на отображение окна не требуются, т.к. если окно открыто, то не получится нажать на кнопку \"форма\" и наоборот\r\n        overlay.style.display = 'flex';\r\n        document.body.style.overflowY = 'hidden';\r\n    }\r\n    if (e.target == cross || e.target == backBtn || e.target.closest('div.window__cross') || e.target.closest('button.form-button.back')) { // делегирование событий\r\n        overlay.style.display = 'none';\r\n        document.body.style.overflowY = 'scroll';\r\n    }\r\n    if (e.target == sendBtn || e.target.closest('button.form-button.send')) {\r\n        if (numberValid && nameValid) { // если и имя, и номер валидны, то запрос можно отправлять на сервер \r\n            sendInformation();\r\n        }\r\n    }\r\n}, true);\r\nnumberInput.onblur = function() {\r\n    if ((this.value.includes('+7') && this.value.length == 12) || (this.value.includes('8') && this.value.length == 11)) { //Условия валидности номера телефона проверяются по окончанию ввода\r\n        numberValid = true;\r\n    } else {\r\n        numberValid = false;\r\n    }\r\n}\r\nnameInput.onblur = function() { //Условия валидности имени проверяются по окончанию ввода\r\n    if (this.value.length > 2) {\r\n        nameValid = true;\r\n    } else {\r\n        nameValid = false;\r\n    }\r\n}\r\nconst xhr = new XMLHttpRequest();\r\n\r\nfunction sendInformation() { //функция по отправке информации на сервер \r\n\r\n    xhr.responseType = \"json\";\r\n    xhr.onreadystatechange = function() {\r\n        if (this.readyState != 4) { // в процессе изменения состояния запроса на всех стадиях будет крутиться спиннер \r\n            spinner.style.display = 'flex';\r\n        }\r\n        if (this.readyState == 4) {\r\n            if (this.status == 200) {\r\n                spinner.style.display = 'none'; //по завершении запроса спиннер выключается \r\n                resultOfQuery(this.response); // передача данных в формате JSON в функцию \r\n            } else {\r\n                errorSpan.innerHTML = 'Ошибка при запросе'; // если результат запроса неудовлетворительный, то выводится ошибка\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n    xhr.open('GET', 'https://jsonplaceholder.typicode.com/todos', true);\r\n    xhr.send();\r\n};\r\n\r\nfunction resultOfQuery(data) { //функция для получения нужных элементов массива\r\n    let resultArray = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i].userId == 5 && data[i].completed == false) {\r\n            resultArray.push(data[i]); //добавление подходящих объектов в отдельный результирующий массив\r\n        }\r\n\r\n    }\r\n    printResults(resultArray);\r\n    console.log(resultArray);\r\n};\r\n\r\nfunction printResults(Array) { // функция по отрисовке результатов\r\n    window.innerHTML = `<div class=\"result__table\">\r\n\t \t\t\t\t\t\t\t\t<div class=\"table__row\">\r\n\t\t  \t\t\t\t\t\t\t\t<div class='table__num'>Номер</div>\r\n\t\t  \t\t\t\t\t\t\t\t<div class='table__user-id'>userID</div>\r\n\t\t  \t\t\t\t\t\t\t\t<div class='table__id'>id</div>\r\n\t\t  \t\t\t\t\t\t\t\t<div class='table__title'>title</div>\r\n\t\t  \t\t\t\t\t\t\t\t<div class='table__complete'>complete</div>\r\n\t \t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>`; // Заголовок таблицы\r\n    const table = document.querySelector('.result__table');\r\n    for (let i = 0; i < Array.length; i++) {\r\n        table.insertAdjacentHTML('beforeend', `\r\n\t\t  <div class=\"table__row\">\r\n\t\t\t  <div class='table__num'>${i+1}</div>\r\n\t\t\t  <div class='table__user-id'>${Array[i].userId}</div>\r\n\t\t\t  <div class='table__id'>${Array[i].id}</div>\r\n\t\t\t  <div class='table__title'>${Array[i].title}</div>\r\n\t\t\t  <div class='table__completed'>${Array[i].completed}</div>\r\n\t\t\t</div>`);\r\n\r\n    }\r\n}\n\n//# sourceURL=webpack://gulp-2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;